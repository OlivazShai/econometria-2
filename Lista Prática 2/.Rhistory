)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma2,
modelo_arma3,
modelo_arma4,
header = FALSE,
float = FALSE,
)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma2,
modelo_arma3,
modelo_arma4,
header = FALSE,
float = FALSE
)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma2,
modelo_arma3,
modelo_arma4,
header = FALSE,
)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma2,
modelo_arma3,
modelo_arma4,
)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma2,
modelo_arma3,
modelo_arma4
)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma2,
modelo_arma3,
)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma2,
)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
)
stargazer(
modelo_arma5,
modelo_arma1,
)
stargazer(
modelo_arma5,
)
stargazer(modelo_arma5)
stargazer(
modelo_arma5)
stargazer(
modelo_arma5,
modelo_arma1)
stargazer(
modelo_arma5,
modelo_arma1,
mdoelo_arma2)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma3)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma3,
modelo_arma4)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma3)
stargazer(
modelo_arma5,
modelo_arma2,
modelo_arma3
modelo_arma4)
stargazer(
modelo_arma5,
modelo_arma2,
modelo_arma3,
modelo_arma4)
stargazer(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma3,
modelo_arma4)
stargazer( list(
modelo_arma5,
modelo_arma1,
modelo_arma2,
modelo_arma3,
modelo_arma4))
stargazer( list(
m5=modelo_arma5,
m1=modelo_arma1,
m2=modelo_arma2,
m3=modelo_arma3,
m4=modelo_arma4))
stargazer(m5,m1,m2,m3,m4)
m1,m2,m3,m4,m5 = modelo_arma1, modelo_arma2, modelo_arma3, modelo_arma4, modelo_arma5
c(m1,m2,m3,m4,m5) = c(modelo_arma1, modelo_arma2, modelo_arma3, modelo_arma4, modelo_arma5)
m1;m2;m3;m4;m5 = modelo_arma1;modelo_arma2;modelo_arma3;modelo_arma4;modelo_arma5
m1 = modelo_arma1
m2 = modelo_arma2
m3 = modelo_arma3
m4 = modelo_arma4
m5 = modelo_arma5
stargazer(m5,m1,m2,m3,m4)
stargazer(m5,m1,m2,m3,m4)
stargazer(m5,m1,m2,m3,m4,
header = FALSE,
float = FALSE,
dep.var.caption = "Models",
dep.var.labels = "",
column.labels = c(
"AR(1)",
"ARIMA(1,0,1)",
"ARIMA(1,0,2)",
"ARIMA(1,0,3)",
"ARIMA(1,0,4)"))
stargazer(
modelo_arma1,
modelo_arma2,
modelo_arma3,
modelo_arma4,
header = FALSE,
float = FALSE,
dep.var.caption = "Models",
dep.var.labels = "",
column.labels = c(
"ARIMA(1,0,1)",
"ARIMA(1,0,2)",
"ARIMA(1,0,3)",
"ARIMA(1,0,4)")
title = "Resultados dos Modelos ARMA"
stargazer(
modelo_arma1,
modelo_arma2,
modelo_arma3,
modelo_arma4,
header = FALSE,
float = FALSE,
dep.var.caption = "Models",
dep.var.labels = "",
column.labels = c(
"ARIMA(1,0,1)",
"ARIMA(1,0,2)",
"ARIMA(1,0,3)",
"ARIMA(1,0,4)"),
title = "Resultados dos Modelos ARMA"
)
stargazer(m5,m1,m2,m3,m4,
header = FALSE,
float = FALSE,
dep.var.caption = "Models",
dep.var.labels = "",
column.labels = c(
"AR(1)",
"ARIMA(1,0,1)",
"ARIMA(1,0,2)",
"ARIMA(1,0,3)",
"ARIMA(1,0,4)"),
title = "Resultados de todos os modelos realizados"
)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(sidrar)
library(ggplot2)
library(zoo)
library(stringi)
library(tm)
library(scales)
pia_empresa_bruto <- get_sidra(
x = 1845, #PIA - Empresa
variable = c(
630, #número de Empresas
864 #receita líquida de vendas
),
period = as.character(2011:2021),
format = 4, #códigos e descrição
)
## Sem a série 1000864 de "% do total"
## É melhor calcular a porcentagem manualmente no R
pia_empresa <- pia_empresa_bruto %>%
select(
`Valor`,
`Ano`,
`Variável`,
`Classificação Nacional de Atividades Econômicas (CNAE 2.0)`
) %>%
pivot_wider(
names_from = `Variável`,
values_from = `Valor`
) %>%
rename(
ano = Ano,
cnae = `Classificação Nacional de Atividades Econômicas (CNAE 2.0)`,
num_emp = `Número de empresas`,
vv = `Receita líquida de vendas`
) %>%
mutate(
cod_cnae = str_split_fixed(cnae, " ", n = 2)[,1],
desc_cnae = str_split_fixed(cnae, " ", n = 2)[,2],
dig = str_count(cod_cnae)
) %>%
select(
-cnae
) %>%
filter(
! cod_cnae == "Total"
)
pia_empresa_wide <- pia_empresa %>%
mutate(
cod_grupo = ifelse(dig == 4, cod_cnae, NA),
grupo = ifelse(dig == 4, desc_cnae, NA),
cod_divisao = ifelse(dig == 2, cod_cnae, NA),
divisao = ifelse(dig == 2, desc_cnae, NA),
cod_secao = ifelse(dig == 1, cod_cnae, NA),
secao = ifelse(dig == 1, desc_cnae, NA),
) %>%
fill(
secao, divisao, grupo,
cod_secao, cod_divisao, cod_grupo
) %>%
filter(
dig == 4
) %>%
select(
!c(
cod_cnae,
desc_cnae,
dig
)
)
## Calculando o total da receita líquida de vendas por ano
total_receita_ano <- pia_empresa_wide %>%
group_by(ano) %>%
summarize(total_receita_ano = sum(vv, na.rm = TRUE)) %>%
ungroup()
## Fazendo a nova coluna chamada razao_receita (% do total da classe sobre o total da PIA Empresa)
pia_empresa_wide <- pia_empresa_wide %>%
group_by(ano) %>%
mutate(total_receita_ano = sum(vv, na.rm = TRUE)) %>%
ungroup() %>%
mutate(razao_receita = percent(vv / total_receita_ano))
## Podemos retirar a coluna de total_receita_ano do dataframe
pia_empresa_wide <- pia_empresa_wide %>%
select(-total_receita_ano)
calculate_moving_average <- function(x) {
rollapply(x, width = 3, FUN = mean, align = "right", fill = NA)
}
pia_empresa_wide <- pia_empresa_wide %>%
group_by(cod_grupo) %>%
mutate(vv_vp = calculate_moving_average(vv)) %>%
ungroup()
## Baixando os dados de receitas líquidas da PIA - Produto de 2014 até 2021
pia_produto_bruto <- get_sidra(
x = 7752,
variable =c(
362, #número de informações
864 #receita líquida de vendas
),
period = as.character(2017:2021), #2017 até 2021
format = 4, #códigos e descrição
)
pia_produto <- pia_produto_bruto %>%
select(
`Valor`,
`Ano`,
`Variável`,
`Classes das atividades industriais e produtos - Prodlist 2016 e Prodlist 2019`
) %>%
pivot_wider(
names_from = `Variável`,
values_from = `Valor`
) %>%
rename(
ano = Ano,
classes_prod = `Classes das atividades industriais e produtos - Prodlist 2016 e Prodlist 2019`,
num_info = `Número de informações`,
vv = `Receita líquida de vendas`
) %>%
mutate(
cod_prod = str_split_fixed(classes_prod, " ", n = 2)[,1],
desc_prod = str_split_fixed(classes_prod, " ", n = 2)[,2],
dig = str_count(cod_prod)
) %>%
select(
-classes_prod
) %>%
filter(
! cod_prod == "Total"
)
pia_produto_wide <- pia_produto %>%
mutate(
cod_grupo = ifelse(dig == 4, cod_prod, NA),
grupo = ifelse(dig == 4, desc_prod, NA),
cod_prodlist = ifelse(dig == 9, cod_prod, NA),
prodlist = ifelse(dig == 9, desc_prod, NA),
) %>%
fill(
prodlist, grupo,
cod_prodlist, cod_grupo
) %>%
filter(
dig == 4
) %>%
select(
!c(
cod_prod,
desc_prod,
dig
)
)
## Calculando o total da receita líquida de vendas por ano
total_receita_ano_pp <- pia_produto_wide %>%
group_by(ano) %>%
summarize(total_receita_ano_pp = sum(vv, na.rm = TRUE)) %>%
ungroup()
## Removendo as linhas dos valores totais do ano
linhas_para_remover <- c(1, 276, 551, 826, 1101)
pia_produto_wide <- pia_produto_wide %>%
slice(-linhas_para_remover)
## Fazendo a nova coluna chamada razao_receita (% do total da classe sobre o total da PIA Produto)
### Isso aqui talvez não faça tanto sentido na PIA Produto
pia_produto_wide <- pia_produto_wide %>%
group_by(ano) %>%
mutate(total_receita_ano_pp = sum(vv, na.rm = TRUE)) %>%
ungroup() %>%
mutate(razao_receita = percent(vv / total_receita_ano_pp))
## Podemos retirar a coluna de total_receita_ano do dataframe
pia_produto_wide <- pia_produto_wide %>%
select(total_receita_ano_pp)
pia_produto_wide <- pia_produto_wide %>%
group_by(cod_grupo) %>%
mutate(vv_vp = calculate_moving_average(vv)) %>%
ungroup()
total_receita_ano <- pia_empresa_wide %>%
group_by(ano) %>%
summarize(total_receita_ano = sum(vv, na.rm = TRUE)) %>%
ungroup()
View(total_receita_ano)
View(total_receita_ano)
calculate_moving_average <- function(x) {
rollapply(x, width = 3, FUN = mean, align = "right", fill = NA)
}
View(pia_empresa_wide)
pia_empresa_wide <- pia_empresa_wide %>%
group_by(cod_grupo) %>%
mutate(vv_vp = calculate_moving_average(vv)) %>%
ungroup()
pia_empresa <- pia_empresa_bruto %>%
select(
`Valor`,
`Ano`,
`Variável`,
`Classificação Nacional de Atividades Econômicas (CNAE 2.0)`
) %>%
pivot_wider(
names_from = `Variável`,
values_from = `Valor`
) %>%
rename(
ano = Ano,
cnae = `Classificação Nacional de Atividades Econômicas (CNAE 2.0)`,
num_emp = `Número de empresas`,
vv = `Receita líquida de vendas`
) %>%
mutate(
cod_cnae = str_split_fixed(cnae, " ", n = 2)[,1],
desc_cnae = str_split_fixed(cnae, " ", n = 2)[,2],
dig = str_count(cod_cnae)
) %>%
select(
-cnae
) %>%
filter(
! cod_cnae == "Total"
)
pia_empresa_wide <- pia_empresa %>%
mutate(
cod_grupo = ifelse(dig == 4, cod_cnae, NA),
grupo = ifelse(dig == 4, desc_cnae, NA),
cod_divisao = ifelse(dig == 2, cod_cnae, NA),
divisao = ifelse(dig == 2, desc_cnae, NA),
cod_secao = ifelse(dig == 1, cod_cnae, NA),
secao = ifelse(dig == 1, desc_cnae, NA),
) %>%
fill(
secao, divisao, grupo,
cod_secao, cod_divisao, cod_grupo
) %>%
filter(
dig == 4
) %>%
select(
!c(
cod_cnae,
desc_cnae,
dig
)
)
pia_empresa_wide <- pia_empresa_wide %>%
group_by(cod_grupo) %>%
mutate(ma_vv = calculate_moving_average(vv)) %>%
ungroup()
pia_empresa_wide <- pia_empresa_wide %>%
group_by(ano) %>%
mutate(peso_grupo = percent(vv /sum(vv, na.rm = TRUE)))
pia_empresa_wide <- pia_empresa_wide %>%
group_by(ano) %>%
mutate(peso_grupo = percent(vv /sum(vv, na.rm = TRUE))) %>%
ungroup()
pia_empresa_wide <- pia_empresa_wide %>%
group_by(ano) %>%
mutate(
peso_grupo = percent(ma_vv /sum(vv, na.rm = TRUE)),
.after = vv
) %>%
ungroup()
pia_empresa_wide <- pia_empresa_wide %>%
group_by(ano) %>%
mutate(
peso_grupo = percent(ma_vv /sum(vv, na.rm = TRUE)),
.before = cod_grupo
) %>%
ungroup()
pia_empresa_wide <- pia_empresa_wide %>%
group_by(cod_grupo) %>%
mutate(
ma_vv = calculate_moving_average(vv),
.before = cod_grupo
) %>%
ungroup()
pia_empresa_wide <- pia_empresa_wide %>%
group_by(cod_grupo) %>%
mutate(
ma_vv = calculate_moving_average(vv),
.before = `cod_grupo`
) %>%
ungroup()
pia_empresa_wide <- pia_empresa_wide %>%
group_by(cod_grupo) %>%
mutate(
ma_vv = calculate_moving_average(vv),
.before = "cod_grupo"
) %>%
ungroup()
pia_empresa_wide <- pia_empresa %>%
mutate(
cod_grupo = ifelse(dig == 4, cod_cnae, NA),
grupo = ifelse(dig == 4, desc_cnae, NA),
cod_divisao = ifelse(dig == 2, cod_cnae, NA),
divisao = ifelse(dig == 2, desc_cnae, NA),
cod_secao = ifelse(dig == 1, cod_cnae, NA),
secao = ifelse(dig == 1, desc_cnae, NA),
) %>%
fill(
secao, divisao, grupo,
cod_secao, cod_divisao, cod_grupo
) %>%
filter(
dig == 4
) %>%
select(
!c(
cod_cnae,
desc_cnae,
dig
)
)
pia_empresa_wide <- pia_empresa_wide %>%
group_by(cod_grupo) %>%
mutate(
ma_vv = calculate_moving_average(vv),
.before = "cod_grupo"
) %>%
ungroup()
