model.numbers = FALSE,
column.labels = c("soja", "boi", "milho", "dolar", "ibov")
)
map_dfr(
r2,
\(x) Box.test(x, type = "Ljung-Box") %>%  tidy(),
.id = "serie"
)%>%
kable(
col.names = c(
"Série",
"Statistic: X-Squared",
"P Value",
"Lags",
"Method"
),
caption = "Teste Ljung-Box: Resíduos VAR(2) dos Níveis de Preço"
)
plot(irfs)
plot(irfs$soja,nc = 3)
plot(irf(var1))
plot(irfs$soja,nc = 2)
plot(irfs$soja,nc = 2)
plot(irfs$soja,nc = 3)
irf_dolar <- irf(
var1,
impulse = "dolar",
response = c("dolar","ibov"),
n.ahead = 12
)
plot(
irf_dolar,
nc=2
)
plot(
irf_soja,
nc=2
)
plot(irfs$ibov,nc = 3)
plot(irfs$ibov,nc = 3)
map_dfr(
r1,
\(x) Box.test(x, type = "Ljung-Box") %>%  tidy(),
.id = "serie"
)%>%
kable(
col.names = c(
"Série",
"Statistic: X-Squared",
"P Value",
"Lags",
"Method"
),
caption = "Teste Ljung-Box: Resíduos VAR(1) das Log Diferenças"
)
grid.arrange(
grobs = list(acfs, pacfs),
top = textGrob(
"Autocorrelações Parciais: Resíduos VAR(1) \n",
gp = gpar(fontsize = 15))
)
grid.arrange(
grobs = c(acfs, pacfs),
top = textGrob(
"Autocorrelações Parciais: Resíduos VAR(1) \n",
gp = gpar(fontsize = 15))
)
pacfs <- imap(
r1,
\(x, id) ggPacf(x) +
theme_minimal() +
theme(panel.grid = element_blank()) +
labs(
title = paste("Pacf:", str_to_sentence(id)),
y = "",
x = "Lags"
)
)
grid.arrange(
grobs = c(acfs, pacfs),
top = textGrob(
"Autocorrelações Parciais: Resíduos VAR(1) \n",
gp = gpar(fontsize = 15))
)
acfs <- imap(
r1,
\(x, id) ggAcf(x) +
theme_minimal() +
theme(panel.grid = element_blank())+
labs(
title = paste("Acf:", str_to_sentence(id)),
y = "",
x = "Lags"
)  )
pacfs <- imap(
r1,
\(x, id) ggPacf(x) +
theme_minimal() +
theme(panel.grid = element_blank()) +
labs(
title = paste("Pacf:", str_to_sentence(id)),
y = "",
x = "Lags"
)
)
grid.arrange(
grobs = c(acfs, pacfs),
top = textGrob(
"Autocorrelações Parciais: Resíduos VAR(1) \n",
gp = gpar(fontsize = 15))
)
acfs <- imap(
r1,
\(x, id) ggAcf(x) +
theme_minimal() +
theme(panel.grid = element_blank())+
labs(
title = paste("Acf:", str_to_sentence(id)),
y = "",
x = "Lags"
)  )
pacfs <- imap(
r1,
\(x, id) ggPacf(x) +
theme_minimal() +
theme(panel.grid = element_blank()) +
labs(
title = paste("Pacf:", str_to_sentence(id)),
y = "",
x = "Lags"
)
)
grid.arrange(
grobs = c(acfs, pacfs),
top = textGrob(
"Autocorrelações Parciais: Resíduos VAR(1) \n",
gp = gpar(fontsize = 15))
)
acfs <- imap(
r1,
\(x, id) ggAcf(x) +
theme_minimal() +
theme(panel.grid = element_blank())+
labs(
title = paste("Acf:", str_to_sentence(id)),
y = "",
x = "Lags"
)  )
pacfs <- imap(
r1,
\(x, id) ggPacf(x) +
theme_minimal() +
theme(panel.grid = element_blank()) +
labs(
title = paste("Pacf:", str_to_sentence(id)),
y = "",
x = "Lags"
)
)
grid.arrange(
grobs = c(acfs, pacfs),
top = textGrob(
"Autocorrelações e Autocorrelações Parciais dos Resíduos VAR(1) \n",
gp = gpar(fontsize = 15))
)
irf_soja <- irf(
var1,
impulse = "soja",
response = c("soja","milho", "dolar","ibov"),
n.ahead = 12
)
irf_dolar <- irf(
var1,
impulse = "dolar",
response = c("dolar","ibov"),
n.ahead = 12
)
irf_dolar,
plot(
irf_dolar,
nc=2
)
causality(
var1,
cause = "soja")
causality(
var1,
cause = "dolar")
causality(
var1,
cause = "soja")
causality(
var1,
cause = "soja")$Granger
causality(
var1,
cause = "ibov")$Granger
causality(
var1,
cause = "boi")$Granger
causality(
var1,
cause = "dolar")$Granger
causality(
var1,
cause = "ibov")$Granger
causality(
var1,
cause = "milho")$Granger
causality(
var1,
cause = "ibov")$Granger
causality(
var1,
cause = "soja")$Granger
causality(
var1,
cause = "soja")
causality(
var1,
cause = "dolar")
causality(
var1,
cause = "dolar") %>% tidy()
causality(
var1,
cause = "dolar")$Granger %>% tidy()
causality(
var1,
cause = "dolar")$Granger %>% kable()
causality(
var1,
cause = "dolar")$Granger
causality(
var1,
cause = "dolar")$Granger %>% tidy()
causality(
var1,
cause = "dolar")$Granger
causality(
var1,
cause = "soja")$Granger
map_dfr(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy(),
.id = "serie"
)
#
#   kable(
#     col.names = c(
#       "Série",
#       "Statistic: Dickey-Fuller Z (alpha)",
#       "P Value",
#       "Truncation lag",
#       "Method",
#       "Alternative Hypothesis"
#       ),
#     caption = "Teste Philips-Perron: Séries de Níveis de Preço"
#     )
map_dfr(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy(),
.id = x
)
\(x) causality(var1, cause = "soja")$Granger %>% tidy()
\(x) causality(var1, cause = "soja")$Granger %>% tidy()
causality(var1, cause = "soja")$Granger %>% tidy()
causality(var1, cause = "soja")$Granger
causality(var1, cause = "soja")$Granger %>% as_data_frame()
map(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy(),
.id = "serie"
)
map(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
)
#
#   kable(
#     col.names = c(
#       "Série",
#       "Statistic: Dickey-Fuller Z (alpha)",
#       "P Value",
#       "Truncation lag",
#       "Method",
#       "Alternative Hypothesis"
#       ),
#     caption = "Teste Philips-Perron: Séries de Níveis de Preço"
#     )
map(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
set_names(c("soja", "boi", "milho", "dolar", "ibov"))
#
#   kable(
#     col.names = c(
#       "Série",
#       "Statistic: Dickey-Fuller Z (alpha)",
#       "P Value",
#       "Truncation lag",
#       "Method",
#       "Alternative Hypothesis"
#       ),
#     caption = "Teste Philips-Perron: Séries de Níveis de Preço"
#     )
map(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
set_names(c("soja", "boi", "milho", "dolar", "ibov")) %>%
as_tibble()
#
#   kable(
#     col.names = c(
#       "Série",
#       "Statistic: Dickey-Fuller Z (alpha)",
#       "P Value",
#       "Truncation lag",
#       "Method",
#       "Alternative Hypothesis"
#       ),
#     caption = "Teste Philips-Perron: Séries de Níveis de Preço"
#     )
map(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
set_names(c("soja", "boi", "milho", "dolar", "ibov")) %>%
tibble()
#
#   kable(
#     col.names = c(
#       "Série",
#       "Statistic: Dickey-Fuller Z (alpha)",
#       "P Value",
#       "Truncation lag",
#       "Method",
#       "Alternative Hypothesis"
#       ),
#     caption = "Teste Philips-Perron: Séries de Níveis de Preço"
#     )
map(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
set_names(c("soja", "boi", "milho", "dolar", "ibov")) %>%
as_tibble()
#
#   kable(
#     col.names = c(
#       "Série",
#       "Statistic: Dickey-Fuller Z (alpha)",
#       "P Value",
#       "Truncation lag",
#       "Method",
#       "Alternative Hypothesis"
#       ),
#     caption = "Teste Philips-Perron: Séries de Níveis de Preço"
#     )
map(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
tidy()
map_dfr(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
)
#
#   kable(
#     col.names = c(
#       "Série",
#       "Statistic: Dickey-Fuller Z (alpha)",
#       "P Value",
#       "Truncation lag",
#       "Method",
#       "Alternative Hypothesis"
#       ),
#     caption = "Teste Philips-Perron: Séries de Níveis de Preço"
#     )
map_dfr(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
mutate(
serie = c("soja", "boi", "milho", "dolar", "ibov"),
.before = everything())
#
#   kable(
#     col.names = c(
#       "Série",
#       "Statistic: Dickey-Fuller Z (alpha)",
#       "P Value",
#       "Truncation lag",
#       "Method",
#       "Alternative Hypothesis"
#       ),
#     caption = "Teste Philips-Perron: Séries de Níveis de Preço"
#     )
map_dfr(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
mutate(
serie = c("soja", "boi", "milho", "dolar", "ibov"),
.before = everything()) %>%
select(
-2:3
)
#
#   kable(
#     col.names = c(
#       "Série",
#       "Statistic: Dickey-Fuller Z (alpha)",
#       "P Value",
#       "Truncation lag",
#       "Method",
#       "Alternative Hypothesis"
#       ),
#     caption = "Teste Philips-Perron: Séries de Níveis de Preço"
#     )
map_dfr(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
mutate(
serie = c("soja", "boi", "milho", "dolar", "ibov"),
.before = everything()) %>%
select(
-c(df1,df2)
)
#
#   kable(
#     col.names = c(
#       "Série",
#       "Statistic: Dickey-Fuller Z (alpha)",
#       "P Value",
#       "Truncation lag",
#       "Method",
#       "Alternative Hypothesis"
#       ),
#     caption = "Teste Philips-Perron: Séries de Níveis de Preço"
#     )
causality(va1, "soja")
causality(var1, "soja")
causality(var1, "soja")$Granger
map_dfr(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
mutate(
serie = c("soja", "boi", "milho", "dolar", "ibov"),
.before = everything(),
method = str_remove(method, "Granger causality")
) %>%
select(
-c(df1,df2)
) %>%
kable(
col.names = c(
"Série",
"F-Statistic",
"P Value",
"Null Hypothesis"
),
caption = "Teste Philips-Perron: Séries de Níveis de Preço"
)
map_dfr(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
mutate(
serie = c("soja", "boi", "milho", "dolar", "ibov"),
.before = everything(),
method = str_remove(method, "Granger causality")
) %>%
select(
-c(df1,df2)
) %>%
kable(
col.names = c(
"Série",
"F-Statistic",
"P Value",
"Null Hypothesis"
),
caption = "Teste de Causalidade de Granger: Modelo VAR(1)",
)
map_dfr(
c("soja", "boi", "milho", "dolar", "ibov"),
\(x) causality(var1, cause = x)$Granger %>% tidy()
) %>%
mutate(
serie = c("soja", "boi", "milho", "dolar", "ibov"),
.before = everything(),
method = str_remove(method, "Granger causality")
) %>%
select(
-c(df1,df2)
) %>%
kable(
col.names = c(
"Série",
"F-Statistic",
"P Value",
"Hipótese Nula"
),
caption = "Teste de Causalidade de Granger: Modelo VAR(1)",
digits = 4
)
