library(readxl)
library(forecast)
library(tseries)
library(rugarch)
library(fGarch)
petr4 <- read_xlsx("./PETR4.xlsx")
ret <- ts(petr4$`Var%`)
ret <- na.omit(ret)
plot(ret)
library(readxl)
library(forecast)
library(tseries)
library(rugarch)
library(fGarch)
# Modelando os retornos com um AR(1)
ret_ar1 <- arima(ret, order = c(1,0,0), include.mean = TRUE, method = "ML")
# Coletando os resíduos
res_ar1 <- ret_ar1[["residuals"]]
plot(res_ar1)
# Autocorrelação serial
res_ar1 <- na.omit(res_ar1)
res_ar1_acf <- acf(res_ar1, lag.max = 10)
res_ar1_pacf <- pacf(res_ar1, lag.max = 20)
# Modelando os resíduos com AR(5)
res_reg <- arima(res_ar1, order = c(5,0,0), include.mean = TRUE, method = "ML")
summary(res_reg)
# Modelando os retornos com um AR(1)
ret_ar1 <- arima(ret, order = c(1,0,0), include.mean = TRUE, method = "ML")
# Coletando os resíduos
res_ar1 <- ret_ar1[["residuals"]]
plot(res_ar1)
# Autocorrelação serial
res_ar1 <- na.omit(res_ar1)
res_ar1_acf <- acf(res_ar1, lag.max = 10)
acf(ret)
# Autocorrelação serial
res_ar1 <- na.omit(res_ar1)
res_ar1_acf <- acf(res_ar1, lag.max = 10)
# Autocorrelação serial dos resíduos
res_ar1 <- na.omit(res_ar1)
res_ar1_acf <- acf(res_ar1, lag.max = 10)
# Modelando os resíduos com AR(5)
res_reg <- arima(res_ar1, order = c(5,0,0), include.mean = TRUE, method = "ML")
summary(res_reg)
# Definindo a especificação do modelo garch(p,q)
spec <- ugarchspec(variance.model = list(model = "sGARCH",garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0)))
# Ajustando o modelo garch(p,q) ao dados
fit_garch <- ugarchfit(spec, data = ret, )
# Resultado
print(fit_garch)
# Resultado
fit_garch
# Resultado
fit_garch@fit
# Resultado
fit_garch@model
# Resultado
fit_garch@fit$coef
options(scipen = 999)
# Resultado
fit_garch@fit$coef
# Resultado
fit_garch@fit$scores
# Resultado
fit_garch@model$pars
# Resultado
summary(fit_garch)
# Resultado
summary(fit_garch$model)
# Resultado
summary(fit_garch$fit)
# Resultado
fit_garch
# Modelando os retornos com um garch(1,1)
ret_garch11 <- garch(ret, order = c(1,1))
ret_garch11[["coef"]]
summary(ret_garch11)
plot(ret_garch11)
# Erros fitados
fitted_errors <- ret_garch11[["fitted.values"]]
plot(fitted_errors)
# Coletando os resíduos
res_garch11 <- ret_garch11[["residuals"]]
plot(res_garch11)
# Autocorrelação serial dos resíduos
res_garch11 <- na.omit(res_garch11)
res_garch11_acf <- acf(res_garch11, lag.max = 40)
res_garch11_pacf <- pacf(res_garch11, lag.max = 40)
forecast(model, h = 1, level = c(80, 95), fan = FALSE, ...)
# Modelando os retornos com um garch(1,1)
ret_garch11 <- garch(ret, order = c(1,1))
ret_garch11[["coef"]]
summary(ret_garch11)
plot(ret_garch11)
# Modelando os retornos com um garch(1,1)
ret_garch11 <- garch(ret, order = c(1,1))
ret_garch11[["coef"]]
plot(ret_garch11)
# Coletando os resíduos
res_ar1 <- ret_ar1[["residuals"]]
plot(res_ar1)
# Ajustando o modelo garch(p,q) ao dados
fit_garch <- ugarchfit(spec, data = ret, )
# Resultado
fit_garch@fit$coef
# Coeficientes
fit_garch@fit$coef
fit_garch@fit$matcoef
# Coeficientes
fit_garch@fit$matcoef
fit_garch
fit_garch@fit$scores
fit_garch@fit$scores
fit_garch@fit$cvar
fit_garch@fit$log.likelihoods
fit_garch@model$
fit_garch@model$modelinc
fit_garch@model$modeldesc
fit_garch@model$modeldata
fit_garch@model$pars
View(fit_garch)
infocriteria(fit_garch)
# Critérios de Informação
infocriteria(fit_garch)
fit_garch@sigma.t
fit_garch@fit$sigma
fit_garch@fit$condH
fit_garch@fit
acf(ret)
acf(ret^2)
acf(res_ar1^2, lag.max = 10)
# Definindo a especificação do modelo garch(p,q)
spec <- ugarchspec(variance.model = list(model = "sGARCH",garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0)))
# Ajustando o modelo garch(p,q) ao dados
fit_garch <- ugarchfit(spec, data = ret, )
# Coeficientes
fit_garch@fit$matcoef
forecast(model, h = 1, level = c(80, 95), fan = FALSE, ...)
forecast(fit_garch)
forecast(fit_garch@fit)
ugarchforecast(fit_garch)
plot(ugarchforecast(fit_garch))
ugarchforecast(fit_garch)
ugarchforecast(fit_garch,
n.ahead = 12)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12)
plot(forecast_garch)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12)
plot(forecast_garch, which="all")
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12)
plot(forecast_garch)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
n.roll = 2000)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
n.roll = 1238,
out.sample = 1239)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
n.roll = 1000,
out.sample = 1239)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
plot(forecast_garch)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239,
n.roll = 1000)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239,
n.roll = 120)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239,
n.roll = 1)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239,
n.roll = 12)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
plot(forecast_garch)
plot(forecast_garch)
plot(forecast_garch)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
plot(forecast_garch)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
plot(forecast_garch, 3)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
plot(forecast_garch)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
plot(forecast_garch)
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
forecast_garch
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
forecast_garch@forecast
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
forecast_garch
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
forecast_garch@forecast$seriesFor
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
forecast_garch
plot(forecast_garch@forecast$seriesFor)
plot(forecast_garch@forecast$sigmaFor)
plot(forecast_garch@forecast$seriesFor)
plot(forecast_garch)
plot(forecast_garch@forecast$sigmaFor)
# Modelo eGARCH(1,1)
spec_egarch <- ugarchspec(variance.model = list(model = "eGARCH",garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0)))
# Ajustando o modelo eGARCH(1,1) ao dados
ret_egarch11 <- ugarchfit(spec_egarch, data = ret )
# Resultado
print(ret_egarch11)
# Resultado
ret_egarch11@fit$matcoef
# Information Criteria
infocriteria(ret_egarch11)
ret_egarch11
fit_garch
fit_garch
fit_garch
fit_garch
print(fit_garch0
print(fit_garch)
library(readxl)
library(forecast)
library(tseries)
library(rugarch)
library(fGarch)
library(readxl)
library(readr)
library(forecast)
library(tseries)
library(rugarch)
library(fGarch)
library(readxl)
library(readr)
library(forecast)
library(tseries)
library(rugarch)
library(fGarch)
plot(forecast_garch@forecast$sigmaFor)
plot(forecast_garch@forecast$seriesFor)
plot(forecast_garch@forecast$seriesFor, ylim = c(0.002,0.0013))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.002,0.013))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.02,0.013))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.00001,0.013))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.00001,0.0002))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.00001,0.0003))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.00001,0.0004))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.00001,0.003))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.0001,0.003))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.001,0.003))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.001,0.03))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.001,0.003))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.001,0.0020))
plot(forecast_garch@forecast$seriesFor, ylim = c(0.001,0.0014))
forecast_garch <- ugarchforecast(fit_garch,
n.ahead = 12,
out.sample = 1239)
forecast_garch
plot(forecast_garch@forecast$sigmaFor, main = "Variância Condicional Forecasted")
ugarch.forecast(ret_egarch11)
ugarchforecast(ret_egarch11)
ugarchforecast(ret_egarch11, n.ahead=12)
forc <- ugarchforecast(ret_egarch11, n.ahead=12)
forc <- ugarchforecast(ret_egarch11, n.ahead=12)
forc
forc <- ugarchforecast(ret_egarch11, n.ahead=12)
forc
plot(forc@forecast$sigmaFor)
